[
  {
    "id": "github_001",
    "topic": "GitHub",
    "mainQuestion": "Що таке GitHub і для чого він використовується?",
    "mainAnswer": "GitHub – це веб-сервіс для хостингу IT-проєктів та їхньої спільної розробки, який базується на системі контролю версій Git. Він надає платформу для віддаленого зберігання репозиторіїв Git, керування проєктами, співпраці між розробниками через функціонал Pull Requests, issue tracking та інші інструменти.",
    "additionalQuestions": [
      {
        "id": "github_001_1",
        "question": "Які основні функції GitHub?",
        "answer": "Хостинг репозиторіїв Git, Pull Requests для перегляду та злиття коду, Issue tracking для відстеження помилок та завдань, Wiki для документації, GitHub Pages для хостингу статичних сайтів, GitHub Actions для CI/CD."
      },
      {
        "id": "github_001_2",
        "question": "Які є альтернативи GitHub?",
        "answer": "Основні конкуренти: GitLab, Bitbucket. Також існують сервіси для приватних репозиторіїв та самохостингових рішень."
      }
    ]
  },
  {
    "id": "github_002",
    "topic": "GitHub",
    "mainQuestion": "Що таке Pull Request (PR) на GitHub?",
    "mainAnswer": "Pull Request (або Merge Request у GitLab) – це механізм на GitHub (та інших платформах), що дозволяє розробнику повідомити інших про зміни, які він хоче внести в репозиторій. Це запит на 'влиття' (pull) змін з однієї гілки в іншу. PR зазвичай проходить етап перегляду коду (code review) іншими розробниками перед тим, як зміни будуть прийняті.",
    "additionalQuestions": [
      {
        "id": "github_002_1",
        "question": "Які переваги використання Pull Requests?",
        "answer": "Забезпечує якість коду через рев'ю, дозволяє обговорення змін, спрощує співпрацю, допомагає відстежувати історію внесення функціоналу."
      },
      {
        "id": "github_002_2",
        "question": "Які етапи проходить Pull Request?",
        "answer": "Створення гілки, внесення змін, пуш на GitHub, створення PR, обговорення/рев'ю, можливо, додаткові коміти для виправлень, злиття (merge)."
      }
    ]
  },
  {
    "id": "github_003",
    "topic": "GitHub",
    "mainQuestion": "Що таке 'fork' репозиторію на GitHub?",
    "mainAnswer": "Форк (fork) репозиторію на GitHub – це створення особистої копії існуючого репозиторію на твоєму власному акаунті GitHub. Це дозволяє тобі експериментувати зі змінами, не впливаючи на оригінальний проєкт. Коли ти готовий, ти можеш запропонувати свої зміни назад в оригінальний репозиторій через Pull Request.",
    "additionalQuestions": [
      {
        "id": "github_003_1",
        "question": "Коли використовується 'fork'?",
        "answer": "Форк часто використовується для контриб'ютингу у відкриті проєкти (Open Source), де у тебе немає прямого права запису в оригінальний репозиторій, або для створення власної версії проєкту."
      }
    ]
  },
  {
    "id": "github_004",
    "topic": "GitHub",
    "mainQuestion": "Яка різниця між 'pull' та 'clone' репозиторію?",
    "mainAnswer": "`git clone <URL>` використовується для створення першої локальної копії (клону) віддаленого репозиторію на твоєму комп'ютері, включаючи всю його історію. `git pull` використовується для завантаження останніх змін з віддаленого репозиторію в уже існуючий локальний репозиторій.",
    "additionalQuestions": [
      {
        "id": "github_004_1",
        "question": "Що потрібно, щоб зробити 'clone'?",
        "answer": "Потрібна URL віддаленого репозиторію (HTTPS або SSH). Команда `git clone` створить нову папку з ім'ям репозиторію та завантажить у неї всі файли та історію."
      }
    ]
  },
  {
    "id": "github_005",
    "topic": "GitHub",
    "mainQuestion": "Що таке Issues на GitHub?",
    "mainAnswer": "Issues (проблеми/задачі) на GitHub – це інструмент для відстеження завдань, помилок (багів), запитів на нові функції або будь-яких інших обговорюваних елементів, пов'язаних з проєктом. Вони дозволяють команді централізовано керувати розробкою, призначати відповідальних та відстежувати прогрес.",
    "additionalQuestions": [
      {
        "id": "github_005_1",
        "question": "Які переваги використання Issues?",
        "answer": "Організація роботи, прозора комунікація, відстеження стану задач, можливість призначати відповідальних та додавати мітки (labels)."
      }
    ]
  },
{
  "id": "github_006",
  "topic": "GitHub",
  "mainQuestion": "Що таке GitHub Actions?",
  "mainAnswer": "GitHub Actions – це сервіс для автоматизації робочих процесів (CI/CD) безпосередньо в GitHub. Він дозволяє створювати робочі процеси (workflows), які можуть запускатися на різних подіях, таких як пуш коду, створення Pull Request або планові завдання. Це дозволяє автоматизувати збірку, тестування, деплой та інші етапи розробки.",
  "additionalQuestions": [
    {
      "id": "github_006_1",
      "question": "Які переваги використання GitHub Actions?",
      "answer": "Інтеграція з GitHub, можливість створення складних CI/CD пайплайнів, підтримка різних середовищ виконання, простота налаштування через YAML файли."
    }
  ]
},
{
  "id": "github_007",
  "topic": "GitHub",
  "mainQuestion": "Що таке GitHub Pages?",
  "mainAnswer": "GitHub Pages – це сервіс для хостингу статичних веб-сайтів, який дозволяє розробникам публікувати свої проєкти безпосередньо з репозиторіїв GitHub. Це зручно для створення документації, портфоліо, блогів та інших статичних сайтів.",
  "additionalQuestions": [
    {
      "id": "github_007_1",
      "question": "Як налаштувати GitHub Pages?",
      "answer": "Створити гілку `gh-pages` або використовувати кореневу гілку, додати HTML/CSS файли, перейти в налаштування репозиторію та активувати GitHub Pages."
    }
  ]
},
{
  "id": "github_008",
  "topic": "GitHub",
  "mainQuestion": "Що таке GitHub Gist?",
  "mainAnswer": "GitHub Gist – це сервіс для обміну фрагментами коду або текстовими файлами. Він дозволяє створювати як публічні, так і приватні гісти, які можна легко ділитися з іншими. Gist підтримує версійність, що дозволяє відстежувати зміни в коді.",
  "additionalQuestions": [
    {
      "id": "github_008_1",
      "question": "Як створити Gist?",
      "answer": "Перейти на сторінку Gist на GitHub, ввести назву файлу, додати код або текст, вибрати видимість (публічний або приватний) та натиснути 'Create public gist' або 'Create secret gist'."
    }
  ]
},
{
  "id": "github_009",
  "topic": "GitHub",
  "mainQuestion": "Що таке GitHub Sponsors?",
  "mainAnswer": "GitHub Sponsors – це програма, яка дозволяє розробникам отримувати фінансову підтримку від спільноти за їхню роботу над відкритими проєктами. Користувачі можуть підписатися на регулярні внески, що допомагає підтримувати розробників та їхні проєкти.",
  "additionalQuestions": [
    {
      "id": "github_009_1",
      "question": "Як працює GitHub Sponsors?",
      "answer": "Розробники створюють профіль на GitHub Sponsors, де можуть вказати рівні підтримки та винагороди для спонсорів. Користувачі можуть обирати рівень внеску та отримувати доступ до ексклюзивного контенту або інших переваг."
    }
  ]
},
{
  "id": "github_010",
  "topic": "GitHub",
  "mainQuestion": "Що таке GitHub CLI?",
  "mainAnswer": "GitHub CLI (gh) – це командний інтерфейс для взаємодії з GitHub безпосередньо з терміналу. Він дозволяє виконувати багато операцій, таких як створення Pull Requests, Issues, перегляд репозиторіїв та інше, без необхідності використовувати веб-інтерфейс.",
  "additionalQuestions": [
    {
      "id": "github_010_1",
      "question": "Як встановити GitHub CLI?",
      "answer": "Інструкції з встановлення доступні на офіційному сайті GitHub CLI. Зазвичай це можна зробити через пакетний менеджер, наприклад, Homebrew для macOS або apt для Ubuntu."
    }
  ]
},
{
  "id": "github_011",
  "topic": "GitHub",
  "mainQuestion": "Що таке GitHub Copilot?",
  "mainAnswer": "GitHub Copilot – це інструмент на основі штучного інтелекту, який допомагає розробникам писати код, пропонуючи автодоповнення та фрагменти коду в реальному часі. Він інтегрується з популярними редакторами коду, такими як Visual Studio Code, і використовує машинне навчання для аналізу контексту коду.",
  "additionalQuestions": [
    {
      "id": "github_011_1",
      "question": "Як працює GitHub Copilot?",
      "answer": "Copilot аналізує код, який ти пишеш, та пропонує відповідні фрагменти коду або цілі функції на основі контексту. Він навчається на мільйонах рядків коду з відкритих репозиторіїв."
    }
  ]
}
]
